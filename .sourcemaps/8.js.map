{"version":3,"sources":["../../src/pages/login/login.module.ts","../../src/pages/login/login.ts"],"names":[],"mappings":"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","file":"8.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { IonicPageModule } from 'ionic-angular';\n\nimport { LoginPage } from './login';\n\n@NgModule({\n  declarations: [\n    LoginPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(LoginPage),\n    TranslateModule.forChild()\n  ],\n  exports: [\n    LoginPage\n  ]\n})\nexport class LoginPageModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.module.ts","import { Component } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { IonicPage, NavController, ToastController } from 'ionic-angular';\n\nimport { User } from '../../providers/providers';\nimport { MainPage } from '../pages';\n\nimport firebase from 'firebase';\n\n@IonicPage()\n@Component({\n  selector: 'page-login',\n  templateUrl: 'login.html'\n})\nexport class LoginPage {\n  // The account fields for the login form.\n  // If you're using the username field with or without email, make\n  // sure to add it to the type\n  account: { email: string, password: string } = {\n    email: 'test@example.com',\n    password: 'test'\n  };\n\n  // Our translated text strings\n  private loginErrorString: string;\n\n  constructor(public navCtrl: NavController,\n    public user: User,\n    public toastCtrl: ToastController,\n    public translateService: TranslateService) {\n\n    this.translateService.get('LOGIN_ERROR').subscribe((value) => {\n      this.loginErrorString = value;\n    })\n  }\n\n  // Attempt to login in through our User service\n  doLogin() {\n    if (firebase.auth().currentUser) {\n      firebase.auth().signOut();\n    } \n    else {\n      var email = this.account.email;\n      var password = this.account.password;\n      if (email.length < 6) {\n        alert('Please enter an email address.');\n        return;\n      }\n      if (password.length < 1) {\n        alert('Please enter a password.');\n        return;\n      }\n      firebase.auth().signInWithEmailAndPassword(email, password).catch(function(error) {\n        var errorCode = error.code;\n        var errorMessage = error.message;\n        if (errorCode === 'auth/wrong-password') {\n          alert('Could not verify username or password, please try again.');\n          return;\n        } \n        else if (errorCode === 'auth/user-not-found') {\n          alert('Could not verify username or password, please try again.');\n          return;\n        }  \n        else {\n          alert(errorMessage);\n          return;\n        }\n        //console.log(error);\n      });\n    }\n\n\n    firebase.auth().onAuthStateChanged(user => {\n      if(user) {\n        this.navCtrl.setRoot(MainPage);\n      }\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.ts"],"sourceRoot":""}